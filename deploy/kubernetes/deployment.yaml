apiVersion: apps/v1
kind: Deployment
metadata:
  name: sentinel-app
  namespace: sentinel
  labels:
    app: sentinel-app
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: sentinel-app
  template:
    metadata:
      labels:
        app: sentinel-app
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: sentinel
        image: ghcr.io/ersinkoc/sentinel:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: NODE_OPTIONS
          value: "--expose-gc --max-old-space-size=2048"
        - name: SENTINEL_INTERVAL
          valueFrom:
            configMapKeyRef:
              name: sentinel-config
              key: monitoring-interval
        - name: SENTINEL_THRESHOLD
          valueFrom:
            configMapKeyRef:
              name: sentinel-config
              key: memory-threshold
        - name: SENTINEL_WEBHOOK
          valueFrom:
            secretKeyRef:
              name: sentinel-secrets
              key: webhook-url
              optional: true
        resources:
          limits:
            memory: "2Gi"
            cpu: "1000m"
          requests:
            memory: "512Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: app-logs
          mountPath: /app/logs
      volumes:
      - name: tmp
        emptyDir: {}
      - name: app-logs
        emptyDir: {}
      securityContext:
        fsGroup: 1001
      terminationGracePeriodSeconds: 30

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sentinel-dashboard
  namespace: sentinel
  labels:
    app: sentinel-dashboard
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sentinel-dashboard
  template:
    metadata:
      labels:
        app: sentinel-dashboard
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3001"
        prometheus.io/path: "/api/metrics"
    spec:
      containers:
      - name: dashboard
        image: ghcr.io/ersinkoc/sentinel:latest
        command: ["node", "bin/sentinel.js", "dashboard"]
        args: ["--port", "3001", "--host", "0.0.0.0"]
        ports:
        - containerPort: 3001
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: DASHBOARD_PORT
          value: "3001"
        - name: DASHBOARD_AUTH
          valueFrom:
            secretKeyRef:
              name: sentinel-secrets
              key: dashboard-auth
              optional: true
        resources:
          limits:
            memory: "1Gi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "50m"
        livenessProbe:
          httpGet:
            path: /api/status
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/status
            port: 3001
          initialDelaySeconds: 10
          periodSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL